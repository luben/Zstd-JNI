name: CI
on: [push, pull_request]
jobs:
    linux:
        strategy:
            fail-fast: false
            matrix:
                include: [
                    { os: ubuntu-latest, target: linux/amd64 }
                ]
        runs-on: ${{ matrix.os }}
        steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 11
        - name: Compile
          run: ./sbt compile
        - name: Env
          run: echo "nativeVersion=`cat src/main/native/NativeVersion`" >> $GITHUB_ENV
        - name: Inspect
          run: ldd target/classes/${{ matrix.target }}/libzstd-jni-${nativeVersion}.so
        - name: Test
          run: ./sbt jacoco
        - name: Upload coverage
          uses: codecov/codecov-action@v1
        - name: Deploy
          if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master'}}
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: "us-east-1"
          run: aws s3 cp --recursive target/classes/${{ matrix.target }} s3://zstd-jni/github/${{ matrix.target }}

    macos:
        strategy:
            fail-fast: false
            matrix:
                include: [
                    { os: macos-11.0, host_arch: x86_64, macos_target: x86_64-apple-macos10.12, target_arch: x86_64  },
                    { os: macos-11.0, host_arch: x86_64, macos_target: arm64-apple-macos11,     target_arch: aarch64 }
                ]
        runs-on: ${{ matrix.os }}
        steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 11
        - uses: maxim-lobanov/setup-xcode@v1
          with:
            xcode-version: latest
        - name: Compile
          env:
              CC: cc -target ${{ matrix.macos_target }}
          run: ./sbt compile
        - name: Env
          run: echo "nativeVersion=`cat src/main/native/NativeVersion`" >> $GITHUB_ENV
        - name: Inspect
          if: matrix.target_arch == 'x86_64'
          run: otool -L target/classes/darwin/${{ matrix.target_arch }}/libzstd-jni-${nativeVersion}.dylib
        - name: Test
          if: matrix.target_arch == 'x86_64'
          run: ./sbt jacoco
        - name: Upload coverage
          if: matrix.target_arch == 'x86_64'
          uses: codecov/codecov-action@v1
        - name: Deploy
          if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master'}}
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: "us-east-1"
          run: aws s3 cp --recursive target/classes/darwin/${{ matrix.host_arch }} s3://zstd-jni/github/darwin/${{ matrix.target_arch }}

    windows:
        strategy:
            fail-fast: false
            matrix:
                include: [
                    { msystem: MINGW64, arch: x86_64, java_arch: x64, target: 'win\amd64', s3_path: win/amd64 },
                    { msystem: MINGW32, arch: i686,   java_arch: x86, target: 'win\x86',   s3_path: win/x86 }
                ]
        runs-on: windows-latest
        defaults:
            run:
                shell: msys2 {0}
        steps:
        - uses: actions/checkout@v2
        - uses: msys2/setup-msys2@v2
          with:
            msystem: ${{ matrix.msystem }}
            install: git base-devel mingw-w64-${{ matrix.arch }}-toolchain
            path-type: inherit
            update: true
        - uses: actions/setup-java@v1
          with:
            java-version: 8
            architecture: ${{ matrix.java_arch }}
        - name: Check Java version
          run: java -version
        - name: Compile
          run: ./sbt compile
        - name: Test
          run: ./sbt jacoco
        - name: Upload coverage
          uses: codecov/codecov-action@v1
        - name: Deploy
          if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master'}}
          shell: cmd
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: "us-east-1"
          run: 'aws s3 cp --recursive target\classes\${{ matrix.target }} s3://zstd-jni/github/${{ matrix.s3_path }}'
